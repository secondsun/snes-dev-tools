* General:
    - Why on earth am I using python 2?
    - Expand hardware.s with values for registers
    - Go over linking code properly
* Graphics:
    - Get gfx compression working perfectly (same as original compression).
* Investigate compression:
    - Each room layout group ("plane") has $4000 bytes for its data (pointers use 14
      bits). Uncompressed small rooms can use up to $5000 bytes. Investigate further.
        - Large layout groups should have $10000 bytes. However, in Seasons this
	  number is only $8000 bytes? The seasons version of the
	  "loadRoomLayout" function should be modified to match the ages version
	  when making rom hacks!
* Objects:
    - Should be possible to have object ids greater than $ef, not supported yet
      though
    - Use constant names in the objects folder instead of just numbers?
    - Decide on a good way to define variables per-object, instead of using generic
      "varXX" variable names?
* Scripts:
    - Place scripts next to their interaction code. Should be possible with "section
      append" feature in wla.
* Text:
    - Document some of the esoteric stuff (cmd8, empty text blocks)
    - Change naming scheme so ages and seasons text have distinct names; also make a nice
      way to rename precompressed text
    - Fix tokay island script (https://github.com/Drenn1/ages-disasm/issues/10)

* QOL stuff (in a different branch):
    * Allow usage of banks $40+ for graphics. Currently not possible due to using only
      6 bits for bank number. Check what the european version does for this.
    * Make chest items always have the correct spawn mode
    * Allow moving down a screen in sidescrolling areas
    * Have a completely separate tileset for each area (like ZOLE)
    * Expand possible number of enemies
    * Come up with a better way to manage "treasure" subids?
    * See if "extraEnemyData" table can be simplified with creative macro use
    * Allow up to 256 collisionReactionSets, or label the ones in use so we know which
      ones can be overwritten. (Only 3 slots are unused, which may not be enough to add
      new enemies.)
    * VWF:
        * Fix spacing in file select, farore's memory
        * Scroll text smoothly in the inventory screen
        * Calculate newlines within the code?
    * Bugfixes:
    	* "calculateRoomEdge" function flawed?
        * The "_checkPositionValidForEnemySpawn" is inconsistent? (see note)
        * Fix the "_mapleCheckLinkCanDropItem" function (faulty checks for whether Link
          has obtained bombs, seeds; certain seeds never drop from maple).
        * Tweak seed tree refills so that they don't reset when you visit the tree screen.
          (Questionable if this is a bug)
        * interactionLoadExtraGraphics (2781): see comment there... needs investigation.
        * Fix initializeRoom (30fe) (doesn't save bank number properly)
    * Game enhancements:
        * Allow multiple "bullets" with seed shooter
        * Repair deku scrub code for Bombs and Ember Seeds (half-broken Seasons leftovers)
    * Scripts:
        * Fix potential issue where, in bank $15, you think you're jumping to a script in
          bank $0c, but you're actually jumping to one in $15. (Happens in the rare case
          where the script in bank $0c is within $100 bytes of where you're at in bank
          $15.)
        * Make system more flexible, so we don't need to use "loadscript" to copy to $c300
        * Add better opcodes. Scripting language kind of sucks. ie:
            * Run assembly in any bank
            * Comparison opcodes

* TODO: Check if getting biggoron's sword with empty item slot causes issues?
